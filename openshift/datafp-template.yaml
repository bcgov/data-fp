apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: data-fp-template
metadata:
  annotations:
    openshift.io/display-name: Data-fp Template
    description: |-
      This is a template for Data-fp deployment to OCP 4
  name: data-fp-template

parameters:
  - name: NAME
    description: "base name for the all objects"
    value: datafp
  - name: ENV
    description: "this is dev|test|prd"
    value: dev
  - name: "BASEURL"
    description: "base url of route example: https://data.gov.bc.ca"
    value: data-fp-dev-<licence_plate>.apps.silver.devops.gov.bc.ca
  - name: "FEATURESRC"
    description: "url of git repo for data-fp-features"
    value: https://github.com/bcgov/data-fp-features.git
  - name: "FEATURESRC_BRANCH"
    description: "data-fp-features branch to deploy"
    value: dev
  - name: "MAINSRC"
    description: "url of git repo for data-fp"
    value: https://github.com/bcgov/data-fp
  - name: "MAINSRC_BRANCH"
    description: "data-fp branch to deploy"
    value: dev
  - name: "DEPLOY_NAMESPACE"
    description: "namespace to be deployed"
    value: namespace
  - name: "DATA_FP_API_URL"
    description: "URL to data-fp-api"
    value: data-fp-api-url
  - name: "WEBHOOKSECRETKEY"
    description: "WebHookSecretKey to be used for github webhook"
    value: secret

objects:

  - kind: BuildConfig
    apiVersion: build.openshift.io/v1
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftNewBuild
      labels:
        app: ${NAME}-${ENV}
      name: ${NAME}-${ENV}
    namespace: ${DEPLOY_NAMESPACE}
    spec:
      failedBuildsHistoryLimit: 5
      nodeSelector: null
      output:
        to:
          kind: ImageStreamTag
          name: ${NAME}-${ENV}:latest
      postCommit: {}
      resources: {}
      runPolicy: Serial
      source:
          git:
            uri: ${MAINSRC}
            ref: ${MAINSRC_BRANCH}
          type: Git
      strategy:
        dockerStrategy:
          env:
          - name: BASEURL
            value: https://${BASEURL}
          - name: FEATURESRC
            value: ${FEATURESRC}
          - name: FEATURESRC_BRANCH
            value: ${FEATURESRC_BRANCH}
          from:
            kind: DockerImage
            name: docker.io/alpine:3.6
        type: Docker
      successfulBuildsHistoryLimit: 5
      triggers:
      - generic:
          secret: ${WEBHOOKSECRETKEY}
        type: Generic
      - type: ConfigChange

  - kind: ConfigMap
    apiVersion: v1
    metadata:
      labels:
        app: ${NAME}-${ENV}
      name: data-fp-env-file
      namespace: ${DEPLOY_NAMESPACE}
    data:
      env-file.js: >-
        DATA_FP_API="${DATA_FP_API_URL}"

  - kind: DeploymentConfig
    apiVersion: apps.openshift.io/v1
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftWebConsole
      labels:
        app: ${NAME}-${ENV}
      name: ${NAME}-${ENV}
      namespace: ${DEPLOY_NAMESPACE}
    spec:
      replicas: 2
      selector:
        app: ${NAME}-${ENV}
        deploymentconfig: ${NAME}-${ENV}
      strategy:
        activeDeadlineSeconds: 21600
        resources: {}
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          annotations:
            openshift.io/generated-by: OpenShiftWebConsole
          labels:
            app: ${NAME}-${ENV}
            deploymentconfig: ${NAME}-${ENV}
        spec:
          containers:
            - image: abiosoft/caddy:no-stats
              imagePullPolicy: IfNotPresent
              name: ${NAME}-${ENV}-app
              ports:
                - containerPort: 2015
                  protocol: TCP
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - name: app-runtime
                  mountPath: /srv
                - name: data-fp-env
                  mountPath: /srv/js/env-file.js
                  subPath: env-file.js
          dnsPolicy: ClusterFirst
          initContainers:
            - name: dist
              image: docker-registry.default.svc:5000/${DEPLOY_NAMESPACE}/${NAME}-${ENV}:latest
              command:
                - /bin/sh
                - -c
                - cp -r /app/_site/* /dist
              resources: {}
              volumeMounts:
              - mountPath: /dist
                name: app-runtime
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              imagePullPolicy: Always
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
            - name: app-runtime
              emptyDir: {}
            - name: data-fp-env
              configMap:
                name: data-fp-env-file
                defaultMode: 420
      test: false
      triggers:
      - type: ConfigChange
      - imageChangeParams:
          automatic: true
          containerNames:
            - dist
          from:
            kind: ImageStreamTag
            name: ${NAME}-${ENV}:latest
            namespace: ${DEPLOY_NAMESPACE}
        type: ImageChange

  - kind: Service
    apiVersion: v1
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftNewApp
      labels:
        app: ${NAME}-${ENV}-app
      name: ${NAME}-${ENV}-svc
      namespace: ${DEPLOY_NAMESPACE}
    spec:
      ports:
      - name: 2015-tcp
        port: 2015
        protocol: TCP
        targetPort: 2015
      selector:
        deploymentconfig: ${NAME}-${ENV}
      sessionAffinity: None
      type: ClusterIP

  - kind: Route
    apiVersion: route.openshift.io/v1
    metadata:
      name: ${NAME}-${ENV}-rt
      namespace: ${DEPLOY_NAMESPACE}
      labels:
        app: ${NAME}-${ENV}-app
        template: data-fp-template
    spec:
      host: ${BASEURL}
      to:
        kind: Service
        name: ${NAME}-${ENV}-svc
        weight: 100
      port:
        targetPort: 2015-tcp
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
      wildcardPolicy: None

  - kind: ImageStream
    apiVersion: image.openshift.io/v1
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftNewBuild
      labels:
        app: ${NAME}-${ENV}
      name: ${NAME}-${ENV}
      namespace: ${DEPLOY_NAMESPACE}
    spec:
      lookupPolicy:
        local: false
      tags:
        - name: latest

  - kind: Secret
    apiVersion: v1
    data:
      WebHookSecretKey: ${WEBHOOKSECRETKEY}
    metadata:
      name: ${NAME}-${ENV}-webhook-secret
      namespace: ${DEPLOY_NAMESPACE}
      labels:
        app: ${NAME}-${ENV}
    type: Opaque
